---
- name: reto 2 ansible
  hosts: web
  become: yes
  gather_facts: yes
  
  pre_tasks:
    - name: install packages Postgresql
      ansible.builtin.dnf:
        name= {{ item }}
        state= present
      with_items:
        - postgresql
        - postgresql-server

    - name: install Python packages
      ansible.builtin.pip:
        name= {{ item }}
        state= present
      with_items:
        - psycopg2-binary
        
  tasks:
    - name: verificar si el PostgreSQL esta inicializado
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: initialize PostgreSQL
      ansible.builtin.shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
      
    - name: start and enable services PostgreSQL
      ansible.builtin.service:
        name={{ item }}
        state= started
        enabled= yes
      with_items:
        - postgresql
        
    - name: create database
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres
      
    - name: create db user
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres
      
    - name: grant db user access to db
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres
      
    - name: Allow md5 connection for the db user
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      
    - name: restart postgres
      ansible.builtin.service:
        name= postgresql
        state= restarted
